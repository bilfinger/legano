"use strict";module.exports=function(a,b,c,d,g,h,j,k,l,m){const n={eF:(A)=>(B)=>(C)=>C[A].toString()===B.toString(),gF:(A)=>(B)=>(C)=>C[A]>=B,lF:(A)=>(B)=>(C)=>C[A]<=B,bF:(A)=>(B)=>(C)=>C[A]>=B.k&&C[A]<=B.g},p=(A,B)=>A.filter(n[B.f](B.k)(B.v));let q=null,r=null,s=null,u=null,w=null,x=[],y=null,z=null;switch(u=a.url.split("/"),r=u[2],"_cmd"!==r&&"undefined"==typeof g[r]&&(g[r]=[],g._all.push(r),m.is_debug&&console.log("INDEX angelegt",r)),a.method){case"GET":switch(u.length){case 3:"_cmd"===r?(q=JSON.parse(h),console.log("VERSUCH parametrierter Funktionen---",0,Function.apply(null,q.sfunc)(g,20)),x={command:"done"}):x=g[r];;break;case 4:"_filter"===u[3]?(q=JSON.parse(h),m.is_debug&&console.log("FILTER",h),x=q.reduce(p,g[r])):x=g[r];break;break;case 5:x=Array.prototype.filter.call(g[r],(A)=>new RegExp(u[4]).test(A[u[3]]));;break;default:x=[];}if(a.headers["accept-encoding"]&&a.headers["accept-encoding"].match(/\bdeflate\b/)){let A=new require("stream").Readable();A.push(JSON.stringify(x)),A.push(null),m.is_debug&&console.time("DEFLATE"),b.writeHead(200,{"content-encoding":"deflate","content-type":"application/json"}),A.pipe(require("zlib").createDeflate()).pipe(b),m.is_debug&&console.timeEnd("DEFLATE")}else m.is_debug&&console.time("NO ZIP"),b.writeHeader(200,{"Content-Type":"application/json"}),b.end(JSON.stringify(x)),m.is_debug&&console.timeEnd("NO ZIP");m.is_debug&&console.log("REQUEST.URL",a.url,"ANZAHL DATENS\xC4TZE",x.length);break;case"POST":switch(q=JSON.parse(h),m.is_debug&&console.log("POST areq length",u.length),u.length){case 3:"_cmd"===r?(console.log("MULTI_INDEX_POST"),Array.prototype.forEach.call(q,(A,B)=>{A._index=A._index||"xxx",A.bulk._id=A.bulk._id||"MC"+B.toString()+Date.now().toString(35),A.bulk._ctime=A.bulk._ctime||Date.now(),A.bulk._utime=Date.now(),"undefined"==typeof g[A._index]&&(env[A._index]=[],g._all.push(A._index)),g[A._index].push(A.bulk)}),b.writeHeader(200,{"Content-Type":"application/json"}),b.end(JSON.stringify({type:"multi_index_bulk_add"}))):(q._id=q._id||"MC"+Date.now().toString(35),q._ctime=q._ctime||Date.now(),q._utime=Date.now(),g[r].push(q),b.writeHeader(200,{"Content-Type":"application/json"}),b.end(JSON.stringify(q)),Array.prototype.filter.call(l,(A)=>"add"===A.ev)[0].cb(k,r,q._id,q));break;case 4:"_bulk"===u[3]?(m.is_debug&&console.log("_bulk POST "),Array.prototype.forEach.call(q,(A,B)=>{A._id=A._id||"MC"+B.toString()+Date.now().toString(35),A._ctime=A._ctime||Date.now(),A._utime=Date.now(),g[r].push(A)}),b.writeHeader(200,{"Content-Type":"application/json"}),b.end(JSON.stringify({type:"bulk_add"})),Array.prototype.filter.call(l,(A)=>"badd"===A.ev)[0].cb(k,r,q)):(m.is_debug&&console.log(u[3]," POST mit id"),q._ctime=Date.now(),q._utime=Date.now(),q._id=u[3],g[r].push(q),b.writeHeader(200,{"Content-Type":"application/json"}),b.end(JSON.stringify(q)),Array.prototype.filter.call(l,(A)=>"add"===A.ev)[0].cb(k,r,q._id,q));}d(g);break;case"DELETE":switch(b.writeHeader(200,{"Content-Type":"application/json"}),m.is_debug&&console.log("DELETE areq length",u.length),u.length){case 3:m.is_debug&&console.log("DEL 3 alles wech"),w=[],b.end(JSON.stringify({delete:!0,_id:"_all"}));break;case 4:m.is_debug&&console.log("DEL 4"),"_filter"===u[3]?(q=JSON.parse(h),m.is_debug&&console.log("DEL FILTER",h),w=q.reduce(p,g[r])):(s=u[3],w=Array.prototype.filter.call(g[r],(A)=>A._id!==s));break;b.end(JSON.stringify({delete:!0,_id:s})),Array.prototype.filter.call(l,(A)=>"delete"===A.ev)[0].cb(k,r,s);break;case 5:m.is_debug&&console.log("DEL 5 key value delete"),y=u[3],z=u[4],w=Array.prototype.filter.call(g[r],(A)=>A[y].toString()!==z.toString()),m.is_debug&&console.log(w.length,"Datens\xE4tze gefiltert"),b.end(JSON.stringify({delete:!0,_id:"_bulk"}));break;default:m.is_debug&&console.log("DEL default");}g[r]=w,d(g);break;case"PUT":switch(s=u[3]||null,u.length){case 3:q=JSON.parse(h),"_cmd"===r?(m.is_debug&&console.log("MULTI_INDEX_PUT"),q.forEach((A)=>{let B=Array.prototype.filter.call(g[A._index],(C)=>C._id===A._id);m.is_debug&&console.log(r,g[A._index].length,A._id,A.type,A.value,B.length),1===B.length?(B[0][A.type]=A.value,B[0]._utime=Date.now(),m.is_debug&&console.log(A._index,g[A._index].length," FOUND ",A._id,A.type,A.value)):("kein Treffer",A._id)})):(m.is_debug&&console.log("BULK UPDATE",q.length),q.forEach((A)=>{let B=Array.prototype.filter.call(g[r],(C)=>C._id===A._id);m.is_debug&&console.log(r,g[r].length,A.id,A.type,A.value,B.length),1===B.length&&(B[0][A.type]=A.value,B[0]._utime=Date.now(),m.is_debug&&console.log(r,g[r].length," FOUND ",A.id,A.type,A.value))}),Array.prototype.filter.call(l,(A)=>"bupdate"===A.ev)[0].cb(k,r,q));break;case 4:q=JSON.parse(h),"_bulk"===u[3]?(m.is_debug&&console.log("PUT bulk update"),q.forEach((A)=>{let B=Array.prototype.filter.call(g[r],(C)=>C._id===A._id);console.log(r,A._id,A.type,A.value,B.length),1===B.length&&(B[0][A.type]=A.value,B[0]._utime=Date.now())})):(w=Array.prototype.filter.call(g[r],(A)=>A._id!==s),g[r]=w,g[r].push(q),Array.prototype.filter.call(l,(A)=>"update"===A.ev)[0].cb(k,r,s,q));break;case 5:q=Array.prototype.filter.call(g[r],(A)=>A._id===s)[0],q[u[4]]=JSON.parse(h).value,q._utime=Date.now(),Array.prototype.filter.call(l,(A)=>"kvupdate"===A.ev)[0].cb(k,r,s,u[4],JSON.parse(h).value),m.is_debug&&console.log("KEY data VALUE Update",s,r,u[4],JSON.parse(h).value);break;case 6:q=Array.prototype.filter.call(g[r],(A)=>A._id===s)[0],q[u[4]]=u[5],q._utime=Date.now(),Array.prototype.filter.call(l,(A)=>"akvupdate"===A.ev)[0].cb(k,r,s,u[4],u[5]),m.is_debug&&console.log("KEY/VALUE Update",s,r,u[4],u[5]);break;case 7:q=Array.prototype.filter.call(g[r],(A)=>A._id===s)[0],q[u[4]].length>u[6]&&(q[u[4]]=q[u[4]].slice(1)),q._utime=Date.now(),q[u[4]].push(u[5]),Array.prototype.filter.call(l,(A)=>"pkvupdate"===A.ev)[0].cb(k,r,s,u[4],u[5],u[6]),m.is_debug&&console.log("PUSH KEY Value update",s,r,u[4],u[5],u[6]);}m.is_debug&&console.log("PUT_length",u.length,a.url),d(g),b.writeHeader(200,{"Content-Type":"application/json"}),b.end(JSON.stringify({update:!0,_id:s}));}};
